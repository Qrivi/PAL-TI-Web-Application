<?xml version="1.0" encoding="UTF-8" ?>

<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:spring-data="http://www.springframework.org/schema/data/jpa" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"

        xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/data/jpa
    http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="be.peerassistedlearningti"/>

    <!-- Spring Data -->

    <jee:jndi-lookup id="dataSource" jndi-name="jdbc/PAL" expected-type="javax.sql.DataSource"/>

    <!-- Create default configuration for Hibernate -->

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>

    <!-- Configure the entity manager factory bean -->

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <!-- Set JPA properties -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.entitymanager_factory_name">PAL-FN</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
        <!-- Set base package of your entities -->
        <property name="packagesToScan" value="be.peerassistedlearningti.model"/>
    </bean>

    <!-- Configure the transaction manager bean -->

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Enable annotation driven transaction management -->

    <tx:annotation-driven/>

    <!-- Base package of the repository and service interfaces -->

    <spring-data:repositories base-package="be.peerassistedlearningti.repository, be.peerassistedlearningti.service"/>

    <!-- Message factory -->

    <bean class="be.peerassistedlearningti.web.model.util.MessageFactory"/>

    <!-- Converter service -->

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="be.peerassistedlearningti.web.model.converter.RoomTypeConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.CampusConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.LessonConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.LessonInverseConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.StudentConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.StudentInverseConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.CourseConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.CourseInverseConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.RoomConverter"/>
                <bean class="be.peerassistedlearningti.web.model.converter.RoomInverseConverter"/>
            </set>
        </property>
    </bean>

    <!-- Multipart file settings -->

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="20971520"/>
    </bean>

    <!-- Localization of hibernate messages during validation -->

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>classpath:ValidationMessages</value>
            </list>
        </property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <bean id="messageAccessor" class="org.springframework.context.support.MessageSourceAccessor">
        <constructor-arg index="0" ref="messageSource"/>
    </bean>

    <!-- Validator -->

    <bean name="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- Language Interceptor -->

    <bean id="localeChangeInterceptor"
          class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang"/>
    </bean>

    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="en_US"/>
    </bean>

    <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <ref bean="localeChangeInterceptor"/>
        </property>
    </bean>

    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang"/>
        </bean>
    </mvc:interceptors>

</beans>